@use "sass:map";
@use "./tokens"as tokens;
@use "./background";

$cq: (c1: 28rem, // ~448px
  c2: 47rem, // ~752px
  c3: 80rem, // ~1280px
  c4: 120rem // ~1920px
);

$text-anchors: (h1: (c1: 40, c2: 72, c3: 80, c4: 108),
  s1: (c1: 18, c2: 32, c3: 40, c4: 54),
  h2: (c1: 24, c2: 43, c3: 58, c4: 65),
  h3: (c1: 19, c2: 35, c3: 46, c4: 52),
  h4: (c1: 16, c2: 24, c3: 30, c4: 43),
  body: (c1: 16, c2: 18, c3: 19, c4: 20),
  small: (c1: 12, c2: 14, c3: 16, c4: 16),
  nav-sm: (c1: 27, c2: 36, c3: 36, c4: 36),
  nav: (c1: 36, c2: 36, c3: 36, c4: 36),
);

/* ============================== HELPER FUNCTIONS ============================== */

// Converts a pixel value into rem units, with 16px as a base
@function rem($px) {
  @return ($px * 0.0625) * 1rem;
}

// Generates a clamp between specified font sizes
@function cclamp($s1, $w1, $s2, $w2) {
  $min: rem($s1);
  $max: rem($s2);
  @return clamp(#{$min},
    calc(#{$min} + (#{($max - $min)}) * ((100cqw - #{$w1}) / #{($w2 - $w1)})),
    #{$max});
}

/* ============================================================================== */
/* =                                   MIXINS                                   = */
/* ============================================================================== */

/* ============================== SITE BACKGROUND =============================== */

// Creates a gradient layer for the main website background
@mixin bg-layer($name, $gradient, $blend:multiply, $size:3840px 2160px, $opacity:1, $pos:center center, $repeat:repeat, $index: 0) {
  .bg--#{$name} {
    position: absolute;
    inset: 0;
    pointer-events: none;
    background: $gradient;
    background-position: $pos;
    background-repeat: $repeat;
    background-size: $size;
    mix-blend-mode: $blend;
    opacity: $opacity;
    z-index: $index;
  }
}

/* ================================ FONT SIZING ================================= */

@mixin text($role) {
  $a: map.get($text-anchors, $role);

  @if $a==null {
    @error "Unknown text role `#{$role}`";
  }

  $s1: map.get($a, c1);
  $s2: map.get($a, c2);
  $s3: map.get($a, c3);
  $s4: map.get($a, c4);

  $w1: map.get($cq, c1);
  $w2: map.get($cq, c2);
  $w3: map.get($cq, c3);
  $w4: map.get($cq, c4);

  font-size: rem($s1);

  @container (min-width: #{$w1}) {
    font-size: cclamp($s1, $w1, $s2, $w2);
  }

  @container (min-width: #{$w2}) {
    font-size: cclamp($s2, $w2, $s3, $w3);
  }

  @container (min-width: #{$w3}) {
    font-size: cclamp($s3, $w3, $s4, $w4);
  }

  @container (min-width: #{$w4}) {
    font-size: rem($s4);
  }
}

@mixin text-static($px, $bump-at-c3: false) {
  font-size: rem($px);

  @if $bump-at-c3 {
    @container (min-width: map.get($cq, c3)) {
      font-size: rem($px + 1);
    }
  }
}

/* =============================== COLUMN SIZING ================================ */

@mixin set-cols($cells: 2) {
  display: flex;
  flex-direction: column;
  --width: calc(var(--cols) * var(--col) + (var(--cols) - 1) * var(--gutter));

  >* {
    width: 100%;
    max-width: var(--width);
    flex: 0 0 auto;

    display: flex;
    align-self: center;
    justify-content: center;
    align-items: center;
    text-align: center;
  }

  @media (orientation: landscape) {
    flex-direction: row;
    justify-content: space-around;
    --width: calc(((var(--cols) / #{$cells}) * var(--col)) + (((var(--cols) / #{$cells}) - 1) * var(--gutter)));

    >* {
      flex: 0 0 var(--width);
      max-width: var(--width);

    }
  }
}

// Removes horizontal margins and padding
@mixin fullbleed {
  margin-inline: 0;
  padding-inline: 0;
}