/* abstracts/_mixins.scss */

/* Fluid clamp between min/max over a viewport range */
@function fluid($min, $max, $minvw: 320px, $maxvw: 1440px) {
  $slope: (#{$max} - #{$min}) / (#{$maxvw} - #{$minvw});
  $intercept: #{$min} - ($slope * #{$minvw});
  @return clamp(#{$min}, #{$intercept} + #{$slope} * 100vw, #{$max});
}

/* Visually hidden (accessible) */
@mixin sr-only {
  position: absolute !important;
  width: 1px !important; height: 1px !important;
  padding: 0 !important; margin: -1px !important;
  overflow: hidden !important; clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important; border: 0 !important;
}

/* Focus ring (matches your tokens by default) */
@mixin focus-ring($color: var(--accent), $offset: 3px, $radius: 8px) {
  outline: 3px solid $color;
  outline-offset: $offset;
  border-radius: $radius;
}

/* Truncation */
@mixin ellipsis {
  overflow: hidden; white-space: nowrap; text-overflow: ellipsis;
}
@mixin line-clamp($lines: 2) {
  display: -webkit-box; -webkit-line-clamp: $lines; -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Media helpers (optional: complement grid.up) */
@mixin down($width) { @media (max-width: $width) { @content; } }

/* Centering + container */
@mixin center-block { margin-left: auto; margin-right: auto; }
@mixin container {
  max-width: var(--container);
  @include center-block;
  padding-inline: var(--space);
}

/* Image/object cover */
@mixin cover {
  width: 100%; height: 100%; object-fit: cover;
}

/* Motion-safe toggle */
@mixin motion-safe { @media (prefers-reduced-motion: no-preference) { @content; } }
@mixin motion-reduce { @media (prefers-reduced-motion: reduce) { @content; } }

/* Quick spacing that respects your --space scale */
@mixin space-y($mult: 1) { row-gap: calc(var(--space) * #{$mult}); }
@mixin space-x($mult: 1) { column-gap: calc(var(--space) * #{$mult}); }
